name: Cross platform build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        if [ $RUNNER_OS == "macOS" ]; then
          brew install cmake gcc
        else
          sudo apt update && sudo apt install -y cmake g++
        fi

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest' && matrix.c_compiler == 'cl'
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        install: mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc

    - name: Configure CMake project (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        cmake -S . -B build

    - name: Configure CMake project (Windows)
      if: matrix.os == 'windows-latest' && matrix.c_compiler == 'cl'
      shell: msys2 {0}
      run: |
        cmake -S . -B build

    - name: Build C++ code (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        cmake --build build

    - name: Build C++ code (Windows)
      if: matrix.os == 'windows-latest' && matrix.c_compiler == 'cl'
      shell: msys2 {0}
      run: |
        cmake --build build

    - name: Run tests (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        cd build
        ./main

    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest' && matrix.c_compiler == 'cl'
      shell: msys2 {0}
      run: |
        cd build
        ./main.exe
